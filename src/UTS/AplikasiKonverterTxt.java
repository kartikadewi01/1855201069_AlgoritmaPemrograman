/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UTS;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import java.io.FileReader;
import java.util.Properties;
import javax.swing.JOptionPane;

/**
 *
 * @author kartika
 */
public class AplikasiKonverterTxt extends javax.swing.JFrame {

    //menyimpan sementara Isi dari dokumen
    ArrayList textFile = new ArrayList();

    /**
     * Creates new form Converter
     */
    public AplikasiKonverterTxt() {
        //memberikan nama aplikasi
        this.setTitle("Convert Doc dan Docx");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        lokasi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        docx = new javax.swing.JButton();
        cari = new javax.swing.JButton();
        doc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(237, 1, 73));
        setForeground(new java.awt.Color(255, 1, 73));

        jPanel3.setBackground(new java.awt.Color(255, 153, 204));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        lokasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lokasiActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Rubik Medium", 0, 14)); // NOI18N

        docx.setText("DOCX");
        docx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docxActionPerformed(evt);
            }
        });

        cari.setText("CARI");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        doc.setText("DOC");
        doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lokasi)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(doc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(docx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lokasi, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(docx, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(doc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(49, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docActionPerformed
        //Tombol yang menjalankan fungsi save ke doc
        DocWriter(lokasi.getText());
    }//GEN-LAST:event_docActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:

        //fungsi Mencari file
        cariFile();
    }//GEN-LAST:event_cariActionPerformed

    private void docxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docxActionPerformed
        // TODO add your handling code here:

        //Tombol yang menjalankan fungsi save ke docx
        DocxWriter(lokasi.getText());
    }//GEN-LAST:event_docxActionPerformed

    private void lokasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lokasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lokasiActionPerformed

    //
    void cariFile() {
        //variabel untuk menyimpan file
        File fn;

        //Mencari file
        JFileChooser chooser = new JFileChooser(".");
        int openDialog = chooser.showOpenDialog(AplikasiKonverterTxt.this);
        if (openDialog == JFileChooser.APPROVE_OPTION) {
            //Meyimpan lokasi file yang telah dipilih
            fn = chooser.getSelectedFile();
            String pathFile = fn.getPath();

            //menampilkan lokasi file di textfield
            lokasi.setText(pathFile);

            //menjalankan fungsi untuk membaca isi file
            Read(pathFile);

        }
    }

    //membuat Fungsi membaca file
    void Read(String pathfile) {

        //menyimpan sementara string tiap baris dari dalam file
        String line = null;

        try {
            //membaca file
            FileReader fileReader = new FileReader(pathfile);
            BufferedReader bufReader = new BufferedReader(fileReader);

            //membuat index untuk mengetahui banyak baris didalam file
            int length = 0;

            //Jika baris tidak kosong maka akan ditambahkan kedalam ArrayList yang telah dibuat
            while ((line = bufReader.readLine()) != null) {
                textFile.add(line);
                length++;
            }
            //menutup file reader
            bufReader.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void DocWriter(String path) {
        //Konstruktor untuk memilih lokasi file tujuan
        JFileChooser chooser = new JFileChooser(".");

        //Membuka window pilihan lokasi tujuan
        int openDialog = chooser.showSaveDialog(AplikasiKonverterTxt.this);
        if (openDialog == JFileChooser.APPROVE_OPTION) {

            //Mendapatkan nama file
            String filename = chooser.getSelectedFile().toString();
            //memaksa file menjadi format DOC
            if (!filename.endsWith(".doc")) {
                filename += ".doc";
            }
            try {

                XWPFDocument document = new XWPFDocument();
                FileOutputStream out = new FileOutputStream(new File(filename));

                //Mengeluarkan isi ArrayList dan memasukkan kedalam dokumen
                for (int i = 0; i < textFile.size(); i++) {
                    XWPFParagraph paragraph = document.createParagraph();
                    XWPFRun run = paragraph.createRun();
                    run.setText(String.valueOf(textFile.get(i)));
                }

                //Menutup Doc Writer
                document.write(out);
                out.close();

                //Alert Sukses
                JOptionPane.showMessageDialog(null, "Selesai Membuat File DOC");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    //Fungsi untuk menulis 
    public void DocxWriter(String path) {
        // membuat Konstruktor untuk memilih lokasi file tujuan
        JFileChooser chooser = new JFileChooser(".");
        //Membuka dialog lokasi tujuan file
        int openDialog = chooser.showSaveDialog(AplikasiKonverterTxt.this);
        if (openDialog == JFileChooser.APPROVE_OPTION) {
            String filename = chooser.getSelectedFile().toString();
            //Menambahkan ekstensi docx jika file tidak memenuhi syarat berikut
            if (!filename.endsWith(".docx")) {
                filename += ".docx";
            }
            try {

                XWPFDocument document = new XWPFDocument();
                FileOutputStream out = new FileOutputStream(new File(filename));
                //membuat file dengan format docx
                for (int i = 0; i < textFile.size(); i++) {
                    XWPFParagraph paragraph = document.createParagraph();
                    XWPFRun run = paragraph.createRun();
                    run.setText(String.valueOf(textFile.get(i)));
                }
                //Menutup file writer
                document.write(out);
                out.close();
                
                //menampilkan dialog selesai
                JOptionPane.showMessageDialog(null, "Selesai Membuat File DOCX");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //Add Textarea in to middle panel
//        middlePanel.add(display);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AplikasiKonverterTxt.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AplikasiKonverterTxt.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AplikasiKonverterTxt.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AplikasiKonverterTxt.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AplikasiKonverterTxt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cari;
    private javax.swing.JButton doc;
    private javax.swing.JButton docx;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField lokasi;
    // End of variables declaration//GEN-END:variables
}
